[user]
	# Your name to be shown in history
	name = Simon Wahlin
	
	# Default email (can be overridden per repository)
	email = simon.wahlin@knowledgefactory.se

[credential]
	# Store credentials in Credential Vault
	# Check version of manager using:
	# git credential-manager version
	helper = manager
	
	# Log details of credential usage in root of .git folder
	#writelog = true

[credential "microsoft.visualstudio.com"]
	# authority can be one of following:
	# Auto, Basic, AAD, MSA, GitHub, Bitbucket, Integrated, NTLM
	authority = Auto

	# httpProxy should be set if proxy is required to reach remote
	#httpProxy = https://myproxy.com:8080

	# interactive sets if user can be prompted for credentials, can be one of:
	# Auto, Always, Never
	#interactive = Auto

[credential "advaniase.visualstudio.com"]
	authority = AAD

[credential "github.com"]
	authority = GitHub

[color]
	# use colors when writing output to terminal
	ui = auto

[color "status"]
	# using bold colors makes them a bit more visible on dark background
	added = green bold
	untracked = red bold
	changed = red bold

[core]
	# command for interactive edit window
	editor = code --wait

	# have git look in this folder for hooks
	hooksPath = ~/.githooks

	# controls how git will handle line endings
	# can be:
	# true
	#    automaticly convert text files to CRLF on checkout and to LF on commit
	# input
	#    no conversion on checkout, convert to LF on commit.
	# false
	#    no conversion
	autocrlf = true

[branch]
	autosetuprebase = always

[merge]
	# use vscode as merge tool
	tool = vscode

[mergetool "vscode"]
	# configuration for merge tool vscode
	cmd = code --wait $MERGED

[diff]
	# use vscode as diff tool
	tool = vscode

[difftool "vscode"]
	# configuration for diff tool vscode
	cmd = code --wait --diff $LOCAL $REMOTE
[help]
	# "guess" correct command when misspelling commands
	# this will make "git commt" work
	autoCorrect = -1

[pull]
 	# set how git handles fast-forward, can be false or only
	# false will create extra merge commit on pull
	# only will only pull if fast-forward is possible (same as --ff-only)
 	ff = only

	# always do --rebase on pull
	# this prevents wierd merges when someone pushed a new commit and you have made local commits
	# can be potentially dangerous
	#rebase = true

[push]
	# when doing git push, only push current branch
	default = current

[log]
	# default to not show the full commit object name
	abbrevCommit = true
	# show short ref names on git log
	decorate = short
